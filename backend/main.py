from flask import Flask, request
from itertools import islice
import time
import json

app = Flask(__name__)


class Post:
    def __init__(self,
                 post_id: str,
                 author: str,
                 avatar_source: str,
                 author_id: str,
                 content: str,
                 timestamp: int,
                 likes: int,
                 reposts: int):
        self.post_id = post_id
        self.author = author
        self.avatar_source = avatar_source
        self.author_id = author_id
        self.content = content
        self.timestamp = timestamp
        self.likes = likes
        self.reposts = reposts


POSTS = [
    Post("123", "–û–ª—å–≥–∞ –ë—É–∑–æ–≤–∞", "https://sun9-69.userapi.com/c850324/v850324431/1dffa7/7hexV-7y-P8.jpg?ava=1", "olgabuzova",
         "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ üôèüèª –†–æ–¥–∏–Ω–∞ –º–æ–µ–π –º–∞–º–æ—á–∫–∏.... –ó–¥–µ—Å—å –º–æ–π –¥–µ–¥—É—à–∫–∞ —Ö–æ–¥–∏–ª –≤ –æ–∫–µ–∞–Ωüö¢ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å "
         "–±–∞–±—É—à–∫–æ–π, –∏ –∑–¥–µ—Å—å –∂–µ —Ä–æ–¥–∏–ª–∞—Å—å –º–æ—è –º–∞–º—É–ª—è‚ù§Ô∏è –ñ–∏–ª–∏ –Ω–∞ –ö–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µüòô–∏ –º–∞–º–∞ –ø–µ—à–∫–æ–º —Å–∞–º–∞ –≤ 7 "
         "–ª–µ—Ç —à–ª–∞ –¥–æ 13 —à–∫–æ–ª—ã, –≥–¥–µ –∏ —É—á–∏–ª–∞—Å—å, –ø–æ–∫–∞ –Ω–µ –ø–µ—Ä–µ–µ—Ö–∞–ª–∏ –≤ –ö–ª–∞–π–ø–µ–¥—É ...–Ø –∂–¥—É –≤–∞—Å –≤—Å–µ—Ö —Å–µ–≥–æ–¥–Ω—è "
         "–≤ –ü–∞–ª–ª–∞–¥–µ –Ω–∞ –º–æ–µ–º —à–æ—É ¬´–ü—Ä–∏–Ω–∏–º–∞–π –º–µ–Ω—è¬ª üôåüèª –ù–æ–≤—ã–µ –ø–µ—Å–Ω–∏, –Ω–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞...–ú—ã –Ω–∞ –º–µ—Å—Ç–µ üöÄ "
         "–í–æ—Ç –æ–Ω–∞ —èüë∏üèª –ö—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Å –Ω–∞–º–∏? –ü–∏—à–∏—Ç–µ ü•∞", int(time.time() * 1000), 10, 5),

    Post("4567", "–û–ª—å–≥–∞ –ë—É–∑–æ–≤–∞", "https://sun9-69.userapi.com/c850324/v850324431/1dffa7/7hexV-7y-P8.jpg?ava=1", "olgabuzova",
         "–ú–æ–∏ –¥–æ—Ä–æ–≥–∏–µ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –≤–µ–ª–∏–∫–∏–º –∏ —Å–≤–µ—Ç–ª—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –†–æ–∂–¥–µ—Å—Ç–≤–∞ –ü—Ä–µ—Å–≤—è—Ç–æ–π "
         "–ë–æ–≥–æ—Ä–æ–¥–∏—Ü—ãüåπüåπüåπ–•–æ—á—É –ø–æ–∂–µ–ª–∞—Ç—å –≤–∞–º —Å—á–∞—Å—Ç—å—è –∏ –≤–µ—Ä—ã –≤ —á—É–¥–µ—Å–∞‚òÄü§≤üèª –Ø –≤–µ—Ä—é –≤ —Ç–æ, "
         "—á—Ç–æ –¥–æ–±—Ä–æ –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç, —á—Ç–æ –∏—Å–∫—Ä–µ–Ω–Ω—è—è –º–æ–ª–∏—Ç–≤–∞ —Ç–≤–æ—Ä–∏—Ç —á—É–¥–µ—Å–∞ –∏ —á—Ç–æ –Ω–µ—Ç –Ω–∏—á–µ–≥–æ "
         "–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤–µ—Ä–∏—Ç... –ü—É—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–µ—Ä–¥—Ü–µ —Ü–∞—Ä–∏—Ç –º–∏—Ä –∏ –ª—é–±–æ–≤—å, –∏ –ë–æ–≥–æ—Ä–æ–¥–∏—Ü–∞ "
         "—Ö—Ä–∞–Ω–∏—Ç –≤–∞—Å –æ—Ç –≤—Å–µ–≥–æ –ø–ª–æ—Ö–æ–≥–æ. –û–Ω–∞ –≤—Å–µ—Ö —Å–ª—ã—à–∏—Ç –∏ –≤—Å–µ–º –ø–æ–º–æ–≥–∞–µ—Ç! –Ø –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –ù–µ–±–µ—Å–∞–º –∑–∞ –≤—Å—ë, "
         "—á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏ –∏ –≤–µ—Ä—é, —á—Ç–æ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ —á—É–¥–æ –µ—â—ë –≤–ø–µ—Ä–µ–¥–∏ üôèüèª‚ôæ... –ê —É –≤–∞—Å "
         "—Å–ª—É—á–∞–ª–∏—Å—å —á—É–¥–µ—Å–∞? –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–πüôèüèº –ß—Ç–æ —Å—á–∏—Ç–∞–µ—Ç–µ –≥–ª–∞–≤–Ω—ã–º —á—É–¥–æ–º –≤ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏?",
         int(time.time()) - 1000, 100, 90),
    Post("kek", "–í—Å–µ–≤–æ–ª–æ–¥ –°—Ç–µ–ø–∞–Ω–æ–≤", "https://sun9-15.userapi.com/c853520/v853520142/d3c45/XxvJnu46ke0.jpg?ava=1",
         "id186108519", "–ö–£–ö–ê–†–ï–ö–£ –û–õ–û–õ–û –ü–´–©–¨–ü–´–©–¨", int(time.time() * 1000) - 20000, 1, 0),

    Post("kok", "–ü–∞–≤–µ–ª –î—É—Ä–æ–≤", "https://sun9-53.userapi.com/c836333/v836333001/31192/y1Cm4JfplhQ.jpg?ava=1", "durov",
         "–ò–Ω–æ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ Telegram –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –†–æ—Å—Å–∏–∏, —Ç–∞–∫ –∫–∞–∫ ‚Äú–∑–∞–∫–æ–Ω –µ—Å—Ç—å –∑–∞–∫–æ–Ω‚Äù. –û–¥–Ω–∞–∫–æ "
         "Telegram –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –†–æ—Å—Å–∏–∏ –∫–∞–∫ —Ä–∞–∑ –≤–æ–ø—Ä–µ–∫–∏ –≥–ª–∞–≤–Ω–æ–º—É –∑–∞–∫–æ–Ω—É —Å—Ç—Ä–∞–Ω—ã ‚Äì –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏. –†–µ—à–µ–Ω–∏—è "
         "—Å—É–¥–æ–≤ –∏ –∑–∞–∫–æ–Ω—ã, –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—â–∏–µ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏, –Ω–µ –∏–º–µ—é—Ç —Å–∏–ª—ã. –ê —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∏ —Å–∞–º–∞ "
         "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Telegram –Ω–µ–∑–∞–∫–æ–Ω–Ω–∞. –ï—Å–ª–∏ –±—ã –§–°–ë –æ–≥—Ä–∞–Ω–∏—á–∏–ª–∞—Å—å –∑–∞–ø—Ä–æ—Å–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö "
         "—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∞—Ö, —Ç–æ –µ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤–ø–∏—Å—ã–≤–∞–ª–æ—Å—å –±—ã –≤ —Ä–∞–º–∫–∏ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏. –û–¥–Ω–∞–∫–æ —Ä–µ—á—å –∏–¥–µ—Ç –æ "
         "–ø–µ—Ä–µ–¥–∞—á–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å —Ü–µ–ª—å—é –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –±–µ—Å–∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ "
         "–ø–µ—Ä–µ–ø–∏—Å–∫–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∫—Ä—É–≥–∞ –ª–∏—Ü. A —ç—Ç–æ ‚Äì –ø—Ä—è–º–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ 23-–π —Å—Ç–∞—Ç—å–∏ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –æ "
         "–ø—Ä–∞–≤–µ –∫–∞–∂–¥–æ–≥–æ –Ω–∞ —Ç–∞–π–Ω—É –ø–µ—Ä–µ–ø–∏—Å–∫–∏. –ü–æ —ç—Ç–æ–π –ø—Ä–∏—á–∏–Ω–µ —é—Ä–∏—Å—Ç—ã –∏–∑ ‚Äú–ê–≥–æ—Ä—ã‚Äù —Å–µ–≥–æ–¥–Ω—è –æ–±–∂–∞–ª–æ–≤–∞–ª–∏ "
         "—Ä–µ—à–µ–Ω–∏–µ –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ —Å—É–¥–∞ –†–æ—Å—Å–∏–∏ –æ –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∫–∞–∑–∞ –§–°–ë. –ù–∞–¥–µ—é—Å—å, –≤–ª–∞—Å—Ç–∏ –†–æ—Å—Å–∏–∏ –æ—Ç–∫–∞–∂—É—Ç—Å—è –æ—Ç "
         "—è–∑—ã–∫–∞ –Ω–µ–∏—Å–ø–æ–ª–Ω–∏–º—ã—Ö —É–ª—å—Ç–∏–º–∞—Ç—É–º–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Å–µ–≥–æ–¥–Ω—è –≤–µ–¥–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥ —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ "
         "–∫–æ–º–ø–∞–Ω–∏—è–º–∏. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —ç—Ç–æ–≥–æ, –º—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º –±–æ—Ä—å–±—É –∑–∞ Telegram –≤ –†–æ—Å—Å–∏–∏. –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—à–∏—Ö "
         "–ø—Ä–µ–¥–∫–æ–≤ —É—á–∏—Ç –±–∏—Ç—å—Å—è –¥–æ –ø–æ–±–µ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ü–∞. –° –î–Ω–µ–º –ü–æ–±–µ–¥—ã!", int(time.time() * 1000) - 40000,
         1000000, 20000),
]

liked_posts = []


@app.route('/feed')
def feed():
    start_timestamp = int(request.args.get("timestamp", time.time() * 1000))
    count = int(request.args.get("count", 5))

    posts = islice(filter(lambda post: post.timestamp <= start_timestamp, POSTS), 0, count)
    return json.dumps(list(map(lambda post: post.__dict__, posts)))


@app.route('/liked_posts')
def liked_posts():
    start_timestamp = int(request.args.get("timestamp", time.time() * 1000))
    count = int(request.args.get("count", 5))

    posts = islice(filter(lambda post: post.timestamp <= start_timestamp, liked_posts), 0, count)
    return json.dumps(list(map(lambda post: post.__dict__, posts)))


@app.route('/like', methods=['POST'])
def like():
    post_id = request.form['post_id']
    liked_posts.extend(filter(lambda post: post.post_id == post_id, POSTS))


@app.after_request
def after_request(response):
    response.headers.add('Access-Control-Allow-Origin', '*')
    response.headers.add('Access-Control-Allow-Headers', 'Content-Type,Authorization')
    response.headers.add('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE')
    return response
